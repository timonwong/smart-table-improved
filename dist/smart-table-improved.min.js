/*
 * angular-smart-table-improved v0.1.0
 * https://github.com/timonwong/smart-table-improved
 *
 * (c) 2015 Timon Wong
 * License: MIT
 */
!function(e,a){"object"==typeof exports&&"undefined"!=typeof module?a(require("angular")):"function"==typeof define&&define.amd?define(["angular"],a):a(e.angular$1)}(this,function(e){"use strict";function a(a){function n(n,i,r,s){function g(){var e=s.tableState().pagination,a=n.currentPage;n.currentPage=Math.floor(e.start/e.number)+1,n.totalItemCount=e.totalItemCount,n.numPages=e.numberOfPages,n.pages=t(n.currentPage,e.totalItemCount,n.itemsPerPage,l),n.range.lower=e.start+1,n.range.upper=e.start+e.number+1,a!==n.currentPage&&n.onPageChange({newPage:n.currentPage})}n.itemsPerPage=n.itemsPerPage?n.itemsPerPage:a.itemsPerPage,n.maxSize=n.maxSize?n.maxSize:a.maxSize,n.autoHide=e.isDefined(n.autoHide)?n.autoHide:!1,n.directionLinks=e.isDefined(r.directionLinks)?n.$parent.$eval(r.directionLinks):!0,n.boundaryLinks=e.isDefined(r.boundaryLinks)?n.$parent.$eval(r.boundaryLinks):!1,n.paginationClass=r.paginationClass||"";var l=Math.max(n.maxSize,5);n.pages=[],n.pagination={last:1,current:1},n.range={lower:1,upper:1},n.$watch(function(){return s.tableState().pagination},g,!0),n.$watch("itemsPerPage",function(e,a){e!==a&&n.selectPage(1)}),n.selectPage=function(e){e>0&&e<=n.numPages&&s.slice((e-1)*n.itemsPerPage,n.itemsPerPage)},n.tracker=function(e,a){return e+"_"+a},s.tableState().pagination.number||s.slice(0,n.itemsPerPage)}function t(e,a,n,t){var r=[],s=Math.ceil(a/n),g=Math.ceil(t/2),l=void 0;l=g>=e?"start":e>s-g?"end":"middle";for(var u=s>t,o=1;s>=o&&t>=o;){var c=i(o,e,t,s),m=2===o&&("middle"===l||"end"===l),d=o===t-1&&("middle"===l||"start"===l);u&&(m||d)?r.push("..."):r.push(c),o++}return r}function i(e,a,n,t){var i=Math.ceil(n/2);return e===n?t:1===e?e:t>n?a>t-i?t-n+e:a>i?a-i+e:e:e}return{restrict:"EA",require:"^stTable",scope:{itemsPerPage:"=?",maxSize:"=?",onPageChange:"&",autoHide:"=?"},templateUrl:function(e,n){return n.templateUrl||a.templateUrl},link:n}}e="default"in e?e["default"]:e,e.module("smart-table-improved",["smart-table"]),e.module("smart-table-improved").constant("stiPaginationConfig",{itemsPerPage:10,maxSize:10,templateUrl:"sti/template/sti-pagination.html"}).directive("stiPagination",a),a.$inject=["stiPaginationConfig"],angular.module("smart-table-improved").run(["$templateCache",function(e){e.put("sti/template/sti-pagination.html",'<ul class="pagination {{ paginationClass }}" ng-if="pages.length > 1 || !autoHide">\n  <li ng-if="::boundaryLinks" ng-class="{disabled: currentPage === 1}">\n    <a href="" ng-click="selectPage(1)">&laquo;</a>\n  </li>\n  <li ng-if="::directionLinks" ng-class="{disabled: currentPage === 1}">\n    <a href="" ng-click="selectPage(currentPage - 1)">&lsaquo;</a>\n  </li>\n  <li ng-repeat="pageNumber in pages track by tracker(pageNumber, $index)" ng-class="{active: currentPage === pageNumber, disabled: pageNumber === \'...\'}" class="pagenumbers">\n    <a href="" ng-click="selectPage(pageNumber)">{{ pageNumber }}</a>\n  </li>\n  <li ng-if="::directionLinks" ng-class="{disabled: currentPage === numPages}">\n    <a href="" ng-click="selectPage(currentPage + 1)">&rsaquo;</a>\n  </li>\n  <li ng-if="::boundaryLinks" ng-class="{disabled: currentPage === numPages}">\n    <a href="" ng-click="selectPage(numPages)">&raquo;</a>\n  </li>\n</ul>\n')}])});